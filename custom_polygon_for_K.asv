%% Custom polygon coordinates in metres for use with SolveTorsionSimplyConnectedRod.m

% xcs: coordinates of polygon in metres (0.0025 spacing)
 xcs = [
 0.01, 0.0075, 0.005, 0.0025, 0.0, -0.0025, -0.005, -0.0075, -0.0075, -0.0075, -0.0075, -0.01, -0.0125, -0.0125, -0.0125, -0.0125, -0.015, -0.0175, -0.02, -0.02, -0.02, -0.0175, -0.015, -0.0125, -0.0125, -0.0125, -0.0125, -0.01, -0.0075, -0.0075, -0.0075, -0.0075, -0.005, -0.0025, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0025, -0.005, -0.0075, -0.01, -0.0125, -0.015, -0.015, -0.015, -0.015, -0.015, -0.015, -0.015, -0.015, -0.0175, -0.02, -0.0225, -0.0225, -0.0225, -0.02, -0.0175, -0.015, -0.015, -0.015, -0.015, -0.0125, -0.01, -0.01, -0.01, -0.01, -0.0075, -0.005, -0.0025, -0.0025, -0.0025, -0.005, -0.0075, -0.01, -0.01, -0.01, -0.01, -0.0075, -0.005, -0.0025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0025, 0.005, 0.0075, 0.01, 0.0125, 0.015, 0.0175, 0.0175, 0.0175, 0.0175, 0.02, 0.0225, 0.0225, 0.0225, 0.0225, 0.025, 0.0275, 0.03, 0.03, 0.03, 0.0275, 0.025, 0.0225, 0.0225, 0.0225, 0.0225, 0.02, 0.0175, 0.0175, 0.0175, 0.0175, 0.015, 0.0125, 0.01, 0.01, 0.01, 0.01, 0.01, 0.0125, 0.015, 0.0175, 0.02, 0.0225, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.0275, 0.03, 0.0325, 0.0325, 0.0325, 0.03, 0.0275, 0.025, 0.025, 0.025, 0.025, 0.0225, 0.02, 0.02, 0.02, 0.02, 0.0175, 0.015, 0.0125, 0.0125, 0.0125, 0.015, 0.0175, 0.02, 0.02, 0.02, 0.02, 0.0175, 0.015, 0.0125, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01
 ];

% y coordinates of polygon in metres (0.0025 spacing)
 ycs = [
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0025, 0.005, 0.0075, 0.0075, 0.0075, 0.005, 0.0025, 0.0, 0.0, 0.0, 0.0, -0.0025, -0.005, -0.005, -0.005, -0.005, -0.0075, -0.01, -0.0125, -0.0125, -0.0125, -0.01, -0.0075, -0.005, -0.005, -0.005, -0.005, -0.0075, -0.01, -0.0125, -0.015, -0.015, -0.015, -0.015, -0.015, -0.015, -0.015, -0.0175, -0.02, -0.0225, -0.025, -0.0275, -0.03, -0.0325, -0.0325, -0.0325, -0.0325, -0.035, -0.0375, -0.0375, -0.0375, -0.0375, -0.04, -0.0425, -0.045, -0.045, -0.045, -0.0425, -0.04, -0.0375, -0.0375, -0.0375, -0.0375, -0.035, -0.0325, -0.0325, -0.0325, -0.0325, -0.03, -0.0275, -0.025, -0.025, -0.025, -0.025, -0.025, -0.0275, -0.03, -0.0325, -0.035, -0.0375, -0.04, -0.04, -0.04, -0.04, -0.04, -0.04, -0.04, -0.04, -0.0425, -0.045, -0.0475, -0.0475, -0.0475, -0.045, -0.0425, -0.04, -0.04, -0.04, -0.04, -0.0375, -0.035, -0.035, -0.035, -0.035, -0.0325, -0.03, -0.0275, -0.0275, -0.0275, -0.03, -0.0325, -0.035, -0.035, -0.035, -0.035, -0.0325, -0.03, -0.0275, -0.025, -0.025, -0.025, -0.025, -0.025, -0.025, -0.025, -0.0225, -0.02, -0.0175, -0.015, -0.0125, -0.01, -0.0075, -0.0075, -0.0075, -0.0075, -0.005, -0.0025, -0.0025, -0.0025, -0.0025, -0.0, 0.0025, 0.005, 0.005, 0.005, 0.0025, 0.0, -0.0025, -0.0025, -0.0025, -0.0025, -0.005, -0.0075, -0.0075, -0.0075, -0.0075, -0.01, -0.0125, -0.015, -0.015, -0.015, -0.015, -0.015, -0.0125, -0.01, -0.0075, -0.005, -0.0025
 ];

% Number of xy points in each direction in the mesh grid
NumxyPoints = 100;

% calling the function with inputs of the x coordinates, y coordinates,
% number of xy points and the tolerance for the Laplace solver, outputting
% J = the torsional constant (referred to as K in report), its error
% maxerr and J2 the polar moment of inertia, which is not required for my
% report.
[J, J2, maxerr] = SolveTorsionSimplyConnectedRod(xcs, ycs, NumxyPoints, 'tol',1e-8);
disp(J);